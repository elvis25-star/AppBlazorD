@inject LibroService libroService
@inject NavigationManager navigationManager
<EditForm Model="@oLibroFormCLS" OnValidSubmit="@guardar">
	<DataAnnotationsValidator/>
	<div class="mt-3">
		<label>Id Libro</label>
		<InputNumber class="form-control" @bind-Value="oLibroFormCLS.idlibro" />
		<ValidationMessage For="(() => oLibroFormCLS.idlibro)" />

	</div>
	<div class="mt-3">
		<label>Titulo</label>
		<InputText class="form-control" @bind-Value="oLibroFormCLS.titulo" />
		<ValidationMessage For="(()=>oLibroFormCLS.titulo)" />
	</div>
	<div class="mt-3">
		<label>Resumen</label>
		<InputTextArea class="form-control" @bind-Value="oLibroFormCLS.resumen" />
		<ValidationMessage For="(() => oLibroFormCLS.resumen)" />

	</div>
	<div class="mt-3">
		<button type="submit" class="btn btn-success">Guardar</button>
		<button class="btn btn-danger" @onclick="regresar">Regresar</button>
	</div>
</EditForm>
@code {
	[Parameter] public int? idlibro{ get; set; }

	public LibroFormCLS oLibroFormCLS { get; set; } = new LibroFormCLS();

	protected override void OnInitialized()
	{
		if (idlibro != null)
		{
			oLibroFormCLS = libroService.obtenerLibro(idlibro.Value);
		}
	}

	private void guardar()
	{
		//Console.WriteLine("Guardando");
		if (idlibro == null)
		{
			libroService.agregarLibro(oLibroFormCLS);
		}
		else
		{
			libroService.actualizarLibro(oLibroFormCLS);
		}
		navigationManager.NavigateTo("/libro");
	}
	private void regresar()
	{
		navigationManager.NavigateTo("/libro");
	}
}